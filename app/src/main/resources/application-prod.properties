# Production Environment Configuration
# This file contains production-specific settings

# ===============================
# DATABASE CONFIGURATION (PROD)
# ===============================
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:online_bookstore_db}?useSSL=true&requireSSL=true&serverTimezone=UTC
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Production connection pool settings
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# Disable SQL initialization in production
spring.sql.init.mode=never

# JPA settings for production
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# ===============================
# SECURITY CONFIGURATION (PROD)
# ===============================
# Strong JWT configuration for production
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=3600000
app.jwt.refresh-expiration=604800000

# Strong password encoding
app.security.password.strength=12

# Secure session configuration
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# ===============================
# WEB CONFIGURATION (PROD)
# ===============================
# Enable Thymeleaf cache for production
spring.thymeleaf.cache=true

# Disable DevTools in production
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Static resource caching
spring.web.resources.cache.period=31536000

# ===============================
# SERVER CONFIGURATION (PROD)
# ===============================
# Production server settings
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:/}

# Enable HTTPS (configure SSL in external load balancer/reverse proxy)
server.forward-headers-strategy=native

# Production performance settings
server.tomcat.connection-timeout=20000
server.tomcat.max-connections=10000
server.tomcat.threads.max=300
server.tomcat.threads.min-spare=20

# Enable compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# ===============================
# LOGGING CONFIGURATION (PROD)
# ===============================
logging.level.com.bookstore=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.boot.autoconfigure=WARN

# Production logging
logging.file.name=${LOG_PATH:/var/log/bookstore}/bookstore.log
logging.file.max-size=50MB
logging.file.max-history=90
logging.logback.rollingpolicy.total-size-cap=10GB

# Log pattern for production
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n

# ===============================
# ACTUATOR CONFIGURATION (PROD)
# ===============================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Metrics
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# ===============================
# SECURITY HEADERS (PROD)
# ===============================
# Security headers will be configured in SecurityConfig
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# ===============================
# ADMIN CONFIGURATION (PROD)
# ===============================
# Production admin credentials (should be set via environment variables)
app.admin.default.username=${ADMIN_USERNAME}
app.admin.default.password=${ADMIN_PASSWORD}
app.admin.default.email=${ADMIN_EMAIL}

# ===============================
# BUSINESS CONFIGURATION (PROD)
# ===============================
# Production validation settings
app.validation.password.min-length=8
app.validation.password.max-length=128

# Production business rules
app.business.min-order-amount=5.00
app.business.max-order-amount=50000.00
app.business.default-shipping-cost=7.99
app.business.free-shipping-threshold=75.00

# ===============================
# FEATURE FLAGS (PROD)
# ===============================
app.features.user-registration.enabled=${FEATURE_USER_REGISTRATION:true}
app.features.admin-dashboard.enabled=${FEATURE_ADMIN_DASHBOARD:true}
app.features.order-tracking.enabled=${FEATURE_ORDER_TRACKING:true}
app.features.queue-management.enabled=${FEATURE_QUEUE_MANAGEMENT:true}
app.features.email-notifications.enabled=${FEATURE_EMAIL_NOTIFICATIONS:true}
app.features.real-time-updates.enabled=${FEATURE_REAL_TIME_UPDATES:false}

# ===============================
# QUEUE CONFIGURATION (PROD)
# ===============================
app.queue.default.capacity=5000
app.queue.priority.capacity=500
app.queue.processing.capacity=100
app.queue.processing.timeout=600000
app.queue.processing.batch-size=20

# ===============================
# MONITORING & ALERTING (PROD)
# ===============================
# Application metadata for monitoring
info.app.name=${app.name}
info.app.version=${app.version}
info.app.description=${app.description}
info.app.environment=production

# Health check configuration
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.ping.enabled=true

# ===============================
# CACHING (PROD)
# ===============================
# Enable caching for production performance
spring.cache.type=simple
spring.cache.cache-names=books,users,orders,queues

# ===============================
# EMAIL CONFIGURATION (PROD)
# ===============================
# Email settings (if email notifications are enabled)
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# ===============================
# RATE LIMITING (PROD)
# ===============================
# API rate limiting configuration
app.rate-limit.enabled=true
app.rate-limit.requests-per-minute=100
app.rate-limit.requests-per-hour=1000
app.rate-limit.burst-capacity=20

# ===============================
# BACKUP & MAINTENANCE (PROD)
# ===============================
# Maintenance mode
app.maintenance.enabled=${MAINTENANCE_MODE:false}
app.maintenance.message=${MAINTENANCE_MESSAGE:System is under maintenance. Please try again later.}

# Backup configuration
app.backup.enabled=${BACKUP_ENABLED:false}
app.backup.schedule=${BACKUP_SCHEDULE:0 2 * * *}
app.backup.retention-days=${BACKUP_RETENTION_DAYS:30}